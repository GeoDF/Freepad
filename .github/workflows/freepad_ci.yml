name: Freepad CI
run-name: ${{ github.actor }} Freepad CI

on: 
  workflow_dispatch:
  push:
    tags:
      - '*'

env:
  req_file: requirements.txt
  spec_file: freepad.spec
  is_pre_release: true
  python_version: "3.11.0 - 3.14.0"


jobs:
  Build-Freepad-Action:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "🎉 job triggered by a ${{ github.event_name }} event."
      - run: echo "🔎 Building branch ${{ github.ref }} of ${{ github.repository }} on a ${{ runner.os }} server."

      - id: get_version
        name: Get version
        run: echo "tag_name = $(curl -s https://api.github.com/repos/${{ github.repository }}/tags | jq -r '.[0].name')"  >> GITHUB_OUTPUT

      - name: Install alsa deps if on ubuntu-latest
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install libasound2-dev
          sudo apt-get install libjack-dev
      
      - name: Install python
        uses: actions/setup-python@v4
        id: install_python
        with:
          python-version: ${{ env.python_version}}
          check-latest: true
          
      - run: echo "🎉 Python ${{ steps.install_python.outputs.python-version }} installed."

      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - run: echo "🎉 Pip upgraded."

      - name: install Pillow on Windows
        if: matrix.os == 'windows-latest'
        run: python -m pip install pillow

      - name: Install pyinstaller
        run: python -m pip install pyinstaller
      - run: echo "🎉 PyInstaller installed."

      - name: Check out code
        uses: actions/checkout@v4

      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."

      - name: List files checkouted
        run:  ls ${{ github.workspace }}

      - name: Install dependencies
        run: python -m pip install -r ${{ env.req_file}}
      - run: echo "🎉 Dependencies from ${{ env.req_file }} installed."

      - name: Create executable
        id: create_executable
        run: |
          pyinstaller --clean ./${{ env.spec_file }}

#      - name: Upload artifact
#        uses: actions/upload-artifact@v4
#        id: artifact-upload
#        with:
#          name: 'freepad-${{ steps.get_version.outputs.version }}_${{ runner.os }}-${{ matrix.version }}'
#          path: './dist'
#          if-no-files-found: error
#          retention-days: 1
#          overwrite: true

#      - name: If executable upload success
#        if: steps.artifact_upload.conclusion == 'success'
#        run: |
#          echo "🎉 Artifact uploaded."
#          echo ${{ steps.artifact.artifact-digest }} > sha256.txt

#      - name: If executable upload fails
#        if: steps.artifact_upload.conclusion == 'failure'
#        run: echo "🎉 Artifact upload failed."

      - name: Release
        id: release
        uses: softprops/action-gh-release@v2
        with:
          name: 'freepad-${{ steps.get_version.outputs.version }}_${{ runner.os }}-${{ matrix.version }}'
          #repository: ${{ github.repository }}/releases/${{ matrix.os }}-${{ matrix.version }}
          body: first pre-release
          #tag_name: ${{ steps.get_version.outputs.tag_name }}
          tag_name: 0.9.7
          prerelease: true
          files: |
            LICENSE
            README.md
            ./dist/Freepad/*

      - run: echo "🍏 Job's status is ${{ job.status }}. Release uploaded to ${{ steps.release.outputs.upload_url }}"



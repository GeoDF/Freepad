name: Freepad CI
run-name: ${{ github.actor }} Freepad CI

on: 
  workflow_dispatch:
  push:
    tags:
      - '*'

env:
  req_file: requirements.txt
  spec_file: freepad.spec
  is_pre_release: true
  python_version: "3.11.0 - 3.14.0"


jobs:
  Build-Freepad-Action:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "🎉 job triggered by a ${{ github.event_name }} event."
      - run: echo "🔎 Building branch ${{ github.ref }} of ${{ github.repository }} on a ${{ runner.os }} server."

      - name: Install python
        uses: actions/setup-python@v4
        id: install_python
        with:
          python-version: $PYTHON_VERSION
          
      - run: echo "🎉 Python ${{ steps.install_python.outputs.python-version }} installed."

      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - run: echo "🎉 Pip upgraded."

      - name: Install dependencies
        run: python -m pip install -r $REQ_FILE
      - run: echo "🎉 Dependencies from $REQ_FILE installed."

      - name: Install pyinstaller
        run: python -m pip install pyinstaller
      - run: echo "🎉 PyInstaller installed."

      - name: Check out code
        uses: actions/checkout@v4

      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."

      - name: Create executable
        run: pyinstaller --clean $SPEC_FILE
      - run: echo "🎉 PyInstaller succeeded."

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'freepad_${{ runner.os }}'
          path: './dist'
          if-no-files-found: error
          retention-days: 1
          overwrite: true

      - name: If executable upload success
        if: steps.artifact_upload.conclusion == 'success'
        run: echo "🎉 Artifact uploaded."

      - name: If executable upload fails
        if: steps.artifact_upload.conclusion == 'failure'
        run: echo "🎉 Artifact upload failed."

      - run: echo "🍏 Job's status is ${{ job.status }}."

      

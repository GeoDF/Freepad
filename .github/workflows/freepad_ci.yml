name: Freepad CI
run-name: ${{ github.actor }} Freepad CI

on: 
  workflow_dispatch:

  push:
    tags:
      - '*'

permissions:
  contents: write

env:
  req_file: requirements.txt
  spec_file: freepad.spec
  is_pre_release: true
  python_version: "3.11.0 - 3.14.0"


jobs:
  Build-Freepad-Action:
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - run: echo "üéâ job triggered by a ${{ github.event_name }} event."
      - run: echo "üîé Building branch ${{ github.ref }} of ${{ github.repository }} on a ${{ runner.os }} server."

      - name: Install some deps if on ubuntu-latest
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install libasound2-dev
          sudo apt-get install libjack-dev
          sudo apt-get install libxkbcommon-x11-dev libxcb-cursor-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-render-util0-dev libxcb-shape0-dev libxcb-xkb-dev # for pyinstaller / QT6
      
      - name: Install python
        uses: actions/setup-python@v4
        id: install_python
        with:
          python-version: ${{ env.python_version}}
          check-latest: true

      - run: echo "üéâ Python ${{ steps.install_python.outputs.python-version }} installed."

      - name: install Pillow on Windows
        if: matrix.os == 'windows-latest'
        run: python -m pip install pillow

      - name: Install pyinstaller
        run: python -m pip install pyinstaller

      - name: Check out code
        uses: actions/checkout@v4

      - name: Get latest tag      
        id: checkout
        run: | 
            git fetch --tags > /dev/null
            latest=$(git describe --tags `git rev-list --tags --max-count=1`)
            echo "latest_tag=$latest" >> "$GITHUB_OUTPUT"
            echo "üí° The ${{ github.repository }} repository has been cloned to the runner. Last tag is $latest"

      - name: List files checkouted
        run:  ls ${{ github.workspace }}

      - name: Install dependencies
        run: python -m pip install -r ${{env.req_file}}

      - name: Create executable
        id: pyinstaller
        run: |
          pyinstaller --clean ${{ env.spec_file }}
          exe=$(ls dist)
          echo "executable=$exe" >> "$GITHUB_OUTPUT"
          echo "ls dist"

      - name: Release
        id: release
        env:
          TAG_NAME: "${{ steps.checkout.outputs.latest_tag }}"
          EXE: "${{ steps.pyinstaller.outputs.executable }}"
        uses: softprops/action-gh-release@v2
        with:
          name: "freepad-${{env.TAG_NAME}}_${{ImageOS}}"
          #repository: ${{ github.repository }}/releases/${ImageOS}
          body: First pre-release
          tag_name: "$TAG_NAME"
          prerelease: true
          files: |
            LICENSE
            README.md
            "dist/$EXE"

      - run: echo "üçè Job's status is ${{ job.status }}. Release uploaded to ${{ steps.release.outputs.upload_url }}"


